[{"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js":"3","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js":"4","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js":"5","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"6","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js":"7","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js":"8","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js":"9","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js":"10","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js":"11","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js":"12","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js":"13","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js":"14","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js":"15","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js":"16","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"17","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js":"18","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js":"19","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"20","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js":"21","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js":"22","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js":"23","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutButton.js":"24","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js":"25","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js":"26"},{"size":740,"mtime":1639651803032,"results":"27","hashOfConfig":"28"},{"size":1373,"mtime":1639652255880,"results":"29","hashOfConfig":"28"},{"size":4256,"mtime":1639651803030,"results":"30","hashOfConfig":"28"},{"size":774,"mtime":1639651803030,"results":"31","hashOfConfig":"28"},{"size":1489,"mtime":1639651803029,"results":"32","hashOfConfig":"28"},{"size":1880,"mtime":1639651803031,"results":"33","hashOfConfig":"28"},{"size":717,"mtime":1639651803028,"results":"34","hashOfConfig":"28"},{"size":1407,"mtime":1639652753836,"results":"35","hashOfConfig":"28"},{"size":154,"mtime":1639577459902,"results":"36","hashOfConfig":"28"},{"size":3113,"mtime":1639651803031,"results":"37","hashOfConfig":"28"},{"size":941,"mtime":1639651803031,"results":"38","hashOfConfig":"28"},{"size":2773,"mtime":1639577459899,"results":"39","hashOfConfig":"28"},{"size":928,"mtime":1639651803028,"results":"40","hashOfConfig":"28"},{"size":1401,"mtime":1639651803029,"results":"41","hashOfConfig":"28"},{"size":6782,"mtime":1639651803028,"results":"42","hashOfConfig":"28"},{"size":2101,"mtime":1639650450134,"results":"43","hashOfConfig":"28"},{"size":642,"mtime":1639651803031,"results":"44","hashOfConfig":"28"},{"size":882,"mtime":1639651803031,"results":"45","hashOfConfig":"28"},{"size":0,"mtime":1639577459903,"results":"46","hashOfConfig":"28"},{"size":5976,"mtime":1639651803032,"results":"47","hashOfConfig":"28"},{"size":530,"mtime":1639577459903,"results":"48","hashOfConfig":"28"},{"size":762,"mtime":1639651803031,"results":"49","hashOfConfig":"28"},{"size":3602,"mtime":1639577459903,"results":"50","hashOfConfig":"28"},{"size":354,"mtime":1639604150895,"results":"51","hashOfConfig":"28"},{"size":7434,"mtime":1639611408909,"results":"52","hashOfConfig":"28"},{"size":614,"mtime":1639651803028,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1s0z7y7",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":2,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js",[],["120","121"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js",["122","123","124","125","126"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport ExerciseCard from '../components/ExerciseCard';\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\nimport Timer from '../components/WorkoutComponents/Timer';\nimport '../components/WorkoutComponents/StartWorkoutPage.css';\nimport Slider from '@mui/material/Slider';\nimport FinishedWorkoutModal from '../components/WorkoutComponents/FinishedWorkoutModal';\n\nconst StartWorkoutPage = () => {\n    const {id} = useParams();\n    const [exercisesOfWorkout, setExercisesOfWorkout] = useState([]);\n    const [exercise, setExercise] = useState([]);\n    const [nextExercise, setNextExercise] = useState(0);\n    const [finishWorkout, setFinishWorkout] = useState(\"Next Exercise\");\n    const [modal, setModal] = useState(false);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n\n\n    const getAllExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercisesOfWorkout(data))\n    }\n    \n    useEffect(getAllExercisesByWorkoutId, []);\n\n    const getExerciseByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercise(data[nextExercise]))\n    }\n\n    const resetTimer = () => {\n        setSeconds(0);\n        setIsActive(false);\n\n    }\n\n    useEffect(getExerciseByWorkoutId, [nextExercise]);\n\n\n    // const reset = () => {\n    //     setSeconds(0);\n    //     setIsActive(false);\n    // }\n\n    const counter = () => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    };\n    \n    useEffect(resetTimer,[counter])\n    // construct a new object from exercisedp\n\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\n        // const new object = create object that matches backend, map the object \n    fetch(\"http://localhost:8080/api/v1/data/record\", {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newExerciseDataPoint)\n    })\n    .then(data => console.log(data))\n\n    \n}\n\n    const nextButton = <button className=\"finish-workout-button\"onClick={counter}>{finishWorkout}</button> \n\n    const changeText = (text) => {\n        setFinishWorkout(text)\n    }\n\n\n    return(\n        <>\n            <div className=\"preset-beginner-title\">\n                <h1>Workout Routine:</h1>\n                <div className=\"slider-container\">\n                <div className=\"slider\">\n                <Slider\n        defaultValue={1}\n        value={nextExercise+1}\n        step={1}\n        marks\n        min={1}\n        max={exercisesOfWorkout.length}\n        valueLabelDisplay=\"auto\"\n      />\n      </div>\n      </div>\n            </div>\n\n                <div className=\"start-workout-page-container\">\n\n\n                    <div className=\"beginner-current-exercise\">\n                        <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\n                        <ExerciseCard exercise={exercise} />\n                    </div>\n\n                    <div>\n                        <RecordForm exercise={exercise} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\n                    </div>    \n\n                    <div className=\"rest-timer-wrapper\">\n                        <h1 className=\"rest-timer-title\">Rest Timer</h1>\n                        <Timer/>\n                    </div>\n\n            </div>\n\n\n            <div className=\"finish-workout-button-wrapper\">\n                {nextButton}\n                {modal && <FinishedWorkoutModal close={setModal}/>}\n            </div>\n        \n        </>\n    )\n\n}\n\n\nexport default StartWorkoutPage;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js",["127"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutsList from \"../components/WorkoutsList\"\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst MyWorkoutsPage = () => {\n  const [workouts, setWorkouts] = useState([]);\n  // const [exerciseTargets, setExerciseTargets] = useState([]);\n\n  const getAllWorkouts = () => {\n    fetch(\"http://localhost:8080/api/v1/workout\")\n    .then(response => response.json())\n    .then(data => setWorkouts(data))\n  }\n  \n  useEffect(getAllWorkouts, [])\n  // useEffect(getAllExerciseTargets, [])\n  \n    return(\n\n        <>\n        <h1 className=\"pageTitle\">My Workouts</h1>\n          <WorkoutsList workouts = {workouts} />\n          \n\n          \n        </>\n\n\n    )\n}\n\nexport default MyWorkoutsPage;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js",["128","129"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js",["130"],"import {Line} from 'react-chartjs-2';\nimport \"../Styles/MyStatsPage.css\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {CategoryScale} from 'chart.js';\nimport Chart from 'chart.js/auto';\nChart.register(CategoryScale);\n\n\nconst Graph=({valuesToGraph, exerciseType})=>{\n\n    const [chartData,setChartData]=useState([]);\n\n\n    useEffect(() => {\n        setChartData({\n            labels: valuesToGraph.map((value => value.date)),\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\n        }\n    )},[valuesToGraph]);\n\n    let yAxisLabel;\n    let yAxisData;\n    let unit;\n\n    if (exerciseType === \"WEIGHTS\") {\n      yAxisData = chartData.valuesWeight;\n      unit = \"kg\";\n      yAxisLabel = \"Weight Lifted\"\n    } else if (exerciseType === \"CALISTHENICS\") {\n      yAxisData = chartData.valuesSets.map(function (n, i) {\n        return n * chartData.valuesReps[i];\n      });\n      unit = \"reps\";\n      yAxisLabel = \"Total Reps\"\n    } else if (exerciseType === \"CARDIO\") {\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\n        return n / chartData.valuesTime[i];\n      });\n      unit = \"meters/min\";\n      yAxisLabel = \"Pace\"\n    }\n\n    const data = {\n      datasets: [\n        {\n          label: valuesToGraph.date,\n          data: yAxisData,\n          fill: true,\n          backgroundColor: \"transparent\",\n          borderColor: \"rgba(255,30,0, 0.50)\",\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\n          tension: 0.15,\n          fill: {\n            target: \"origin\",\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\n          },\n        },\n      ],\n    };\n\n    return valuesToGraph ? (\n      <>\n        {console.log(exerciseType)}\n        {console.log(data)}\n          <Line\n            data={data}\n            options={{\n              scales: {\n                x: {\n                  labels: chartData.labels,\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: \"Date\",\n                  },\n                },\n                y: {\n                  labels: data.datasets.data,\n                  ticks: {\n                    callback: function (value) {\n                      return value + ` ${unit}`;\n                    },\n                  },\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: `${yAxisLabel}`,\n                  },\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n              aspectRatio:2.6\n                 }}\n          />\n      </>\n    ) : (\n      <p>Loading...</p>\n    );\n}\n \n\nexport default Graph;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js",["131"],"import React from 'react';\nimport Workout from './Workout';\nimport { useNavigate } from \"react-router-dom\";\nimport WorkoutButton from './WorkoutButton';\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutsList= ({workouts}) => {\n    let navigate = useNavigate()\n\n    const goWorkout = (id) =>{\n        navigate(\"/WorkoutPage\")\n    }\n\n    const workoutComponents = workouts.map(workout => {\n        return(\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\n            \n        )\n    })\n\n    return (\n        <>\n            <div className=\"container__button_primary\">\n            {workoutComponents}\n\n            <Link to={{ pathname:\"/NewWorkoutPage\"}}><button className=\"advanced-button\">Create Custom Workout</button></Link>\n            \n            <section className=\"Workout-List\">\n\n            </section>\n            </div>\n        </>\n    )\n}\nexport default WorkoutsList;\n\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js",["132","133","134","135"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weight from '../Icons/dumbbell.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                <div className=\"weights-workout-container\">\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\n                    <div className=\"cardio-workout-targets\">\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeights}</p>\n                 </div>\n                </div>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js",["136","137","138","139"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            {/* currentExercise === exercises.length ? */}\n            <button className=\"start-workout-button\" onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\n            {/* : */}\n\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default StartWorkoutButton;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js",["140"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './StartWorkoutPage.css';\n\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[date, setDate] = useState(\"\") \n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n           setDate(event.target.value)\n       } \n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseDataPoint = {\n            \"exerciseID\": exercise.exercise_Id,\n            \"name\": exercise.name,\n            \"date\": date, \n            \"timeAchieved\": time,\n            \"distanceAchieved\": distance,\n            \"setsAchieved\": sets,\n            \"repsAchieved\": reps,\n            \"weightAchieved\": weights\n        }\n\n        onAddExerciseDataPoint(newExerciseDataPoint);\n        setDate(\"\") \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-data\">\n                            \n                            <div className=\"calisthenics-data-container\">\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-data-targets\">\n                                    <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Sets Achieved:\n                                            <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps Achieved:\n                                            <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-data\">\n\n                    <div className=\"weights-data-container\">\n                        <p className=\"weights-data-name\">{exercise.name}</p>\n\n                        <div className=\"weights-data-targets\">\n                                <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                    <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                    </label>\n                                    <label>Sets Achieved:\n                                        <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps Achievced:\n                                        <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weights Achievced:\n                                        <input type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-data\">\n                            <div className=\"cardio-data-container\">\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-data-targets\">\n                                    <form className=\"record-form-wrapper\" onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Time Achieved:\n                                            <input type=\"text\" placeholder = \"enter duration\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance Achieved:\n                                            <input type=\"text\" placeholder = \"enter distance achieved\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        <h1 className=\"review-form-name\">Review Form</h1>\n        <div className=\"review-form-data\">\n            {displayForm({exercise})}\n        </div>\n        </>\n    )\n\n}\n\nexport default RecordForm;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js",["141"],"import React from 'react';\nimport './Workout.css';\nimport ExerciseCard from './ExerciseCard';\nimport ExerciseTarget from './ExerciseTarget';\n\nconst Workout = ({exercises}) => {\n\n\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\n\n    //filter exercises by exercise_Id, return exercise.name\n\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\n    //     exerciseTarget.exercise_Id;\n    // });\n\n    const exerciseElements = exercises.map(exercise => {\n        return(\n            <ExerciseCard exercise = {exercise} />\n        )\n    }\n      \n    )\n        \n    // const mapExercise = exercises.map(exercise => {\n\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\n    //         return(\n    //             <Exercise id={exercise.id}/>\n    //         )\n    //     // }\n\n    // })\n\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\n        \n    // })\n    // () => {\n    //     if (targetExercise.exercise_Id === exercise.id){\n    //         return exercises.filter(exercise => {\n    //             return exercise.name\n    //         })\n    //     }\n    // }\n    \n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\n    //         return {exercise.name}\n    //     }\n            \n\n    // }\n\n    \n    return (\n        <>\n        {exerciseElements}\n\n        {/* {exerciseName(exerciseTargets, exercises)} \n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\n        </>\n    )\n}\n\n\nexport default Workout;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js",["142","143","144","145"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutButton = ({workout, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    \n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            \n            <button class = \"button__primary\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default WorkoutButton;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["146","147","148","149","150","151","152"],"import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\n// import ExerciseTargetForm from \"../components/ExerciseTargetForm\";\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\nimport { Link } from \"react-router-dom\";\nconst NewWorkoutContainer = () => {\n    \n    const[allExercises, setAllExercises] = useState([]);\n    const[selectedExercise, setSelectedExercise] = useState(null);\n    const[DropSelect, setDropSelect]=useState(null);\n    const[exerciseTarget, setExerciseTarget] = useState(null);\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\n    const[workoutName, setWorkoutName] = useState([]);\n    // const[workoutId, setWorkoutId] = useState(\"\");\n    const[visibleSaveButton, setVisibleSaveButton] = useState(false);\n\n    const getSelectedExercise =()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    const getAllExerciseTargets = () => {\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\n            .then(response => response.json())\n            .then(data => setExerciseTarget(data))\n            .then(console.log(exerciseTarget))\n    }\n\n    const onAddExerciseTarget = (newExerciseTarget) => {\n        // console.log(newExerciseTarget);\n\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\n            console.log(\"same\");\n        }\n        else{\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\n        }\n\n        //add exercise target to a list of newWorkoutExerciseTargetsList\n        \n        // fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-type': 'application/json'\n        //     },\n        //     body: JSON.stringify(newExerciseTarget)\n        // })\n        // .then(() => getAllExerciseTargets());\n    }\n\n    const deleteCard = (id) => {\n        const card = newExerciseTargetList.filter(exercise => {\n            return (\n                exercise.exercise_Id !== id\n        )\n    })\n        setNewExerciseTargetList(card);\n    }\n\n    const handleWorkoutName = (event) => {\n        setWorkoutName(event.target.value);\n    }\n\n    // const workoutNameForm = () => {\n    //     return (\n    //         <form>\n    //             <label>Workout Name:\n    //                 <input type=\"text\" onChange={handleWorkoutName}/>\n    //             </label>\n    //         </form>\n    //     )\n    // }\n\n    const getWorkoutId = () => {\n        return fetch(\"http://localhost:8080/api/v1/workout\")\n                .then(response => response.json())\n                .then(data => data.filter(workout => {\n                    console.log(\"workout: \", workout);\n                    return (\n                        workout.name == workoutName\n                    )\n                }))\n                .then(workout => {return(workout[0].id)})\n    }\n\n    const saveWorkout = () => {\n        //create new workout object, post it, get workoutId\n        const newWorkout = {\n            \"name\": workoutName\n        }\n\n        fetch(\"http://localhost:8080/api/v1/workout\", {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newWorkout)\n        })\n        .then(() => getWorkoutId())\n        //anonymous function, take nothing and call the function\n        .then((workoutId) => {\n            console.log(\"workoutId: \", workoutId);\n            postExerciseTargets(workoutId)});\n        \n        //exerciseTarget object to match with database\n        // postExerciseTargets();\n    }\n\n    const postExerciseTargets = (workoutId) => {\n        newExerciseTargetList.map(exerciseTarget => {\n\n        const newExerciseTarget = { \n            \"exercise_Id\": exerciseTarget.exercise_Id,\n            \"workout_Id\": workoutId,\n            \"time\": exerciseTarget.targetTime,\n            \"distance\": exerciseTarget.targetDistance,\n            \"sets\": exerciseTarget.targetSets,\n            \"reps\": exerciseTarget.targetReps,\n            \"weight\": exerciseTarget.targetWeight\n        }\n\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newExerciseTarget)\n        })\n        .then(data => console.log(data))  \n    })\n    getAllExerciseTargets();\n}\n\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n            <form>\n                <label>Workout Name:\n                    <input type=\"text\" onChange={handleWorkoutName}/>\n                </label>\n            </form>\n        {/* {workoutNameForm} */}\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        {/* <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/> */}\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\n        {saveButton}\n        {/* <saveButton /> */}\n        {/* <button onClick={saveWorkout}>Save</button> */}\n        \n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js",[],["153","154"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js",["155"],"\nimport ExerciseTargetCard from \"./ExerciseTargetCard\"\nimport { useEffect } from \"react/cjs/react.development\"\n\n//an array of the exerciseTargetLists\nconst NewExerciseTargetList = ({newExerciseTargetList, deleteCard}) => {\n    \n    // const exerciseTarget = console.log(\"object:\", (Object.values(newExerciseTargetList))[0][0]);\n    \n    const exerciseTargets = newExerciseTargetList.map(exerciseTarget => {\n        return (\n            <ExerciseTargetCard exercise={exerciseTarget} deleteCard={deleteCard}/>\n        )\n    });\n\n    return (\n        // newExerciseTargetList.length > 0\n        // ?\n        <>\n        {exerciseTargets}\n        </>\n        // :\n        // <>\n        // <p>Loading...</p>\n        // </>\n    )\n}\nexport default NewExerciseTargetList;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js",["156","157","158","159"],"import cardio from '../Icons/cardio.png'\nimport calisthenic from '../Icons/back-lever.png'\nimport { useEffect } from 'react/cjs/react.development'\nimport './Workout.css'\nimport bin from '../Icons/binIcon.png'\n\nconst ExerciseTargetCard = ({exercise, deleteCard}) => {\n\n    const handleDelete = (event) => {\n        console.log(\"id: \", exercise.exercise_Id);\n        //delete the card with id\n        event.preventDefault();\n        deleteCard(exercise.exercise_Id);\n    }\n    \n    const displayCard = () => {\n        // console.log(\"card: \", exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                            <div className=\"calisthenics-workout-targets\">\n                                <p>Sets: {exercise.targetReps}</p>\n                                <p>Reps: {exercise.targetSets}</p>\n                                <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n                        <p>Sets: {exercise.targetSets}</p>\n                        <p>Reps: {exercise.targetReps}</p>\n                        <p>Weights: {exercise.targetWeights}</p>\n                        <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                        </button>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                                    <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                                    <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayCard, [exercise]);\n\n    return (\n        <>\n        {displayCard({exercise})}\n        </>\n    )\n}\n\nexport default ExerciseTargetCard;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutButton.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js",["160","161","162","163","164","165","166","167","168","169","170","171","172"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":18,"column":12,"nodeType":"179","messageId":"180","endLine":18,"endColumn":19},{"ruleId":"177","severity":1,"message":"181","line":19,"column":12,"nodeType":"179","messageId":"180","endLine":19,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":29,"column":43,"nodeType":"184","endLine":29,"endColumn":45,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"183","line":43,"column":39,"nodeType":"184","endLine":43,"endColumn":53,"suggestions":"186"},{"ruleId":"182","severity":1,"message":"187","line":51,"column":11,"nodeType":"188","endLine":69,"endColumn":6,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"190","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"191","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":22,"column":40,"nodeType":"184","endLine":22,"endColumn":42,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":58,"column":11,"nodeType":"195","messageId":"196","endLine":58,"endColumn":15},{"ruleId":"177","severity":1,"message":"197","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":15},{"ruleId":"177","severity":1,"message":"198","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":13,"column":21,"nodeType":"201","endLine":13,"endColumn":77},{"ruleId":"199","severity":1,"message":"200","line":29,"column":17,"nodeType":"201","endLine":29,"endColumn":149},{"ruleId":"199","severity":1,"message":"200","line":44,"column":21,"nodeType":"201","endLine":44,"endColumn":65},{"ruleId":"177","severity":1,"message":"202","line":3,"column":20,"nodeType":"179","messageId":"180","endLine":3,"endColumn":29},{"ruleId":"177","severity":1,"message":"203","line":8,"column":12,"nodeType":"179","messageId":"180","endLine":8,"endColumn":27},{"ruleId":"177","severity":1,"message":"204","line":8,"column":28,"nodeType":"179","messageId":"180","endLine":8,"endColumn":46},{"ruleId":"177","severity":1,"message":"205","line":10,"column":11,"nodeType":"179","messageId":"180","endLine":10,"endColumn":29},{"ruleId":"182","severity":1,"message":"206","line":154,"column":28,"nodeType":"184","endLine":154,"endColumn":38,"suggestions":"207"},{"ruleId":"177","severity":1,"message":"208","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":22},{"ruleId":"177","severity":1,"message":"202","line":3,"column":20,"nodeType":"179","messageId":"180","endLine":3,"endColumn":29},{"ruleId":"177","severity":1,"message":"203","line":9,"column":12,"nodeType":"179","messageId":"180","endLine":9,"endColumn":27},{"ruleId":"177","severity":1,"message":"204","line":9,"column":28,"nodeType":"179","messageId":"180","endLine":9,"endColumn":46},{"ruleId":"177","severity":1,"message":"205","line":12,"column":11,"nodeType":"179","messageId":"180","endLine":12,"endColumn":29},{"ruleId":"177","severity":1,"message":"190","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":14},{"ruleId":"177","severity":1,"message":"209","line":9,"column":11,"nodeType":"179","messageId":"180","endLine":9,"endColumn":27},{"ruleId":"177","severity":1,"message":"210","line":15,"column":11,"nodeType":"179","messageId":"180","endLine":15,"endColumn":28},{"ruleId":"177","severity":1,"message":"211","line":15,"column":30,"nodeType":"179","messageId":"180","endLine":15,"endColumn":50},{"ruleId":"177","severity":1,"message":"212","line":46,"column":11,"nodeType":"179","messageId":"180","endLine":46,"endColumn":30},{"ruleId":"213","severity":1,"message":"214","line":97,"column":38,"nodeType":"215","messageId":"196","endLine":97,"endColumn":40},{"ruleId":"216","severity":1,"message":"217","line":127,"column":50,"nodeType":"218","messageId":"219","endLine":127,"endColumn":52},{"ruleId":"173","replacedBy":"220"},{"ruleId":"175","replacedBy":"221"},{"ruleId":"177","severity":1,"message":"202","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"222","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":11},{"ruleId":"199","severity":1,"message":"200","line":25,"column":29,"nodeType":"201","endLine":25,"endColumn":85},{"ruleId":"199","severity":1,"message":"200","line":60,"column":29,"nodeType":"201","endLine":60,"endColumn":73},{"ruleId":"182","severity":1,"message":"223","line":81,"column":28,"nodeType":"184","endLine":81,"endColumn":38,"suggestions":"224"},{"ruleId":"177","severity":1,"message":"225","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":24},{"ruleId":"177","severity":1,"message":"226","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"227","line":26,"column":11,"nodeType":"179","messageId":"180","endLine":26,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":42,"column":32,"nodeType":"215","messageId":"196","endLine":42,"endColumn":34},{"ruleId":"182","severity":1,"message":"228","line":49,"column":35,"nodeType":"184","endLine":49,"endColumn":37,"suggestions":"229"},{"ruleId":"182","severity":1,"message":"230","line":60,"column":40,"nodeType":"184","endLine":60,"endColumn":42,"suggestions":"231"},{"ruleId":"213","severity":1,"message":"214","line":121,"column":38,"nodeType":"215","messageId":"196","endLine":121,"endColumn":40},{"ruleId":"177","severity":1,"message":"232","line":150,"column":11,"nodeType":"179","messageId":"180","endLine":150,"endColumn":26},{"ruleId":"233","severity":2,"message":"234","line":151,"column":9,"nodeType":"179","messageId":"235","endLine":151,"endColumn":17},{"ruleId":"177","severity":1,"message":"236","line":154,"column":11,"nodeType":"179","messageId":"180","endLine":154,"endColumn":27},{"ruleId":"237","severity":2,"message":"238","line":162,"column":10,"nodeType":"239","messageId":"240","endLine":162,"endColumn":20},{"ruleId":"177","severity":1,"message":"241","line":175,"column":11,"nodeType":"179","messageId":"180","endLine":175,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":184,"column":50,"nodeType":"218","messageId":"219","endLine":184,"endColumn":52},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'seconds' is assigned a value but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["244"],["245"],"The 'counter' function makes the dependencies of useEffect Hook (at line 71) change on every render. To fix this, wrap the definition of 'counter' in its own useCallback() Hook.","VariableDeclarator",["246"],"'Link' is defined but never used.","'Navigate' is defined but never used.",["247"],"no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","unexpected","'Workout' is defined but never used.","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["248"],"'ExerciseTarget' is defined but never used.","'selectedExercise' is assigned a value but never used.","'visibleSaveButton' is assigned a value but never used.","'setVisibleSaveButton' is assigned a value but never used.","'onAddExerciseTarget' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["242"],["243"],"'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["249"],"'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","'customStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'workoutName'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'exercises' and 'id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNewExerciseTargetList' needs the current value of 'exercises'.",["251"],"'handleOpenModal' is assigned a value but never used.","no-undef","'setModal' is not defined.","undef","'handleCloseModal' is assigned a value but never used.","react/jsx-no-undef","'ReactModal' is not defined.","JSXIdentifier","undefined","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"252","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [id]",{"range":"267","text":"268"},"Update the dependencies array to be: [id, nextExercise]",{"range":"269","text":"270"},"Wrap the definition of 'counter' in its own useCallback() Hook.",{"range":"271","text":"272"},{"range":"273","text":"268"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"274","text":"275"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"276","text":"277"},"Update the dependencies array to be: [id, workoutName]",{"range":"278","text":"279"},"Update the dependencies array to be: [exercises, id]",{"range":"280","text":"281"},[1259,1261],"[id]",[1614,1628],"[id, nextExercise]",[1749,2183],"useCallback(() => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    })",[717,719],[6541,6551],"[exercise, handleSubmitTarget]",[3475,3485],"[exercise, handleDelete]",[1730,1732],"[id, workoutName]",[2056,2058],"[exercises, id]"]