{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkoutContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [DropSelect, setDropSelect] = useState(null);\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, [updateDrop]);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  }; // const getExerciseFromSelect\n\n\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NavBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New Workout Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseDropdownSearch, {\n      allExercises: allExercises,\n      dropSelect: DropSelect,\n      updateDrop: updateDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWorkoutContainer, \"6HfkFhhbmY5sGOdXKYIHn3HrzD4=\");\n\n_c = NewWorkoutContainer;\nexport default NewWorkoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkoutContainer\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","ExerciseList","NewWorkoutContainer","allExercises","setAllExercises","DropSelect","setDropSelect","getAllExercises","fetch","then","response","json","data","updateDrop","event","target","value","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIR,eAAe,CAACQ,IAAD,CAFjC;AAGH,GAJD;;AAMAb,EAAAA,SAAS,CAACQ,eAAD,EAAkB,CAACM,UAAD,CAAlB,CAAT;;AAEA,QAAMA,UAAU,GAAEC,KAAD,IAAW;AACxBR,IAAAA,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD,CAb8B,CAiB9B;;;AACA,SACIb,YAAY,CAACc,MAAb,GAAsB,CAAtB,gBAEA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,sBAAD;AAAwB,MAAA,YAAY,EAAId,YAAxC;AAAsD,MAAA,UAAU,EAAEE,UAAlE;AAA8E,MAAA,UAAU,EAAEQ;AAA1F;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBAFA,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ;AAYH,CA9BD;;GAAMX,mB;;KAAAA,mB;AA+BN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\n\nconst NewWorkoutContainer = () => {\n\n    const[allExercises, setAllExercises] = useState([]);\n    const [DropSelect, setDropSelect]=useState(null);\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, [updateDrop]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    // const getExerciseFromSelect\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n        <ExerciseDropdownSearch allExercises = {allExercises} dropSelect={DropSelect} updateDrop={updateDrop}/>\n        {/* <ExerciseList allExercises={allExercises}/> */}\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;"]},"metadata":{},"sourceType":"module"}