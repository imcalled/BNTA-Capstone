{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport Exercise from \"../components/Exercise\";\nimport NewWorkoutExerciseDropdownSearch from \"../components/NewWorkoutExerciseDropdownSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkoutContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [dropSelect, setDropSelect] = useState(null);\n  const [selectedExercise, setSelectedExercise] = useState(null);\n\n  const handleNewExercise = event => {\n    //when submit clicked, get exercise according to id\n    getExerciseTargetById(); //get exercise to display\n\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: \"display exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this); // <Exercise exercise = {selectedExercise}/>\n\n\n    setSelectedExercise(null); //add exercise to list and display\n  };\n\n  const getExerciseTargetById = () => {\n    if (dropSelect) {\n      fetch(`http://localhost:8080/api/v1/data/${dropSelect}`).then(response => response.json()).then(data => setSelectedExercise(data));\n    }\n  };\n\n  useEffect(getExerciseTargetById, [dropSelect]);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, []); // const getExerciseFromSelect\n\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NavBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New Workout Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewWorkoutExerciseDropdownSearch, {\n      allExercises: allExercises,\n      dropSelect: dropSelect,\n      updateDrop: updateDrop,\n      onSubmit: handleNewExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWorkoutContainer, \"Ffc4IzcrpSV6ycRoWxy6sH7Z/Rk=\");\n\n_c = NewWorkoutContainer;\nexport default NewWorkoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkoutContainer\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","ExerciseList","Exercise","NewWorkoutExerciseDropdownSearch","NewWorkoutContainer","allExercises","setAllExercises","dropSelect","setDropSelect","selectedExercise","setSelectedExercise","handleNewExercise","event","getExerciseTargetById","fetch","then","response","json","data","updateDrop","target","value","getAllExercises","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gCAAP,MAA6C,gDAA7C;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AACjC;AACAC,IAAAA,qBAAqB,GAFY,CAIjC;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALiC,CAMjC;;;AAEAH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB,CARiC,CASjC;AACH,GAVD;;AAYA,QAAMG,qBAAqB,GAAG,MAAM;AAChC,QAAGN,UAAH,EAAe;AACXO,MAAAA,KAAK,CAAE,qCAAoCP,UAAW,EAAjD,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIR,mBAAmB,CAACQ,IAAD,CAFjC;AAGH;AACJ,GAND;;AAQAnB,EAAAA,SAAS,CAACc,qBAAD,EAAwB,CAACN,UAAD,CAAxB,CAAT;;AAEA,QAAMY,UAAU,GAAEP,KAAD,IAAW;AACxBJ,IAAAA,aAAa,CAACI,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BR,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIZ,eAAe,CAACY,IAAD,CAFjC;AAGH,GAJD;;AAMAnB,EAAAA,SAAS,CAACuB,eAAD,EAAkB,EAAlB,CAAT,CAtC8B,CAwC9B;;AACA,SACIjB,YAAY,CAACkB,MAAb,GAAsB,CAAtB,gBAEA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGI,QAAC,gCAAD;AAAkC,MAAA,YAAY,EAAIlB,YAAlD;AAAgE,MAAA,UAAU,EAAEE,UAA5E;AAAwF,MAAA,UAAU,EAAEY,UAApG;AAAgH,MAAA,QAAQ,EAAER;AAA1H;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBAFA,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ;AAYH,CArDD;;GAAMP,mB;;KAAAA,mB;AAsDN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport Exercise from \"../components/Exercise\";\nimport NewWorkoutExerciseDropdownSearch from \"../components/NewWorkoutExerciseDropdownSearch\"\n\nconst NewWorkoutContainer = () => {\n\n    const[allExercises, setAllExercises] = useState([]);\n    const [dropSelect, setDropSelect] = useState(null);\n    const [selectedExercise, setSelectedExercise] = useState(null);\n\n    const handleNewExercise = (event) => {\n        //when submit clicked, get exercise according to id\n        getExerciseTargetById();\n\n        //get exercise to display\n        <p>display exercise</p>\n        // <Exercise exercise = {selectedExercise}/>\n\n        setSelectedExercise(null);\n        //add exercise to list and display\n    }\n\n    const getExerciseTargetById = () => {\n        if(dropSelect) {\n            fetch(`http://localhost:8080/api/v1/data/${dropSelect}`)\n            .then(response => response.json())\n            .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getExerciseTargetById, [dropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n    \n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    // const getExerciseFromSelect\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n            <NewWorkoutExerciseDropdownSearch allExercises = {allExercises} dropSelect={dropSelect} updateDrop={updateDrop} onSubmit={handleNewExercise}/>\n        {/* <ExerciseList allExercises={allExercises}/> */}\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;"]},"metadata":{},"sourceType":"module"}