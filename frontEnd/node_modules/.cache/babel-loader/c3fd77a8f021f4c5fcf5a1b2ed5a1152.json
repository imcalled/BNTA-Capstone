{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkoutContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [dropSelect, setDropSelect] = useState(null);\n\n  const handleNewExercise = event => {\n    event.preventDefault(); //when submit clicked, get exercise according to id\n    //add exercise to list and display\n\n    getExerciseTargetById;\n  };\n\n  const getExerciseTargetById = () => {\n    if (dropSelect) {\n      fetch(`http://localhost:8080/api/v1/data/${dropSelect}`).then(response => response.json()).then(data => setSelectedExercise(data));\n    }\n  };\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, []); // const getExerciseFromSelect\n\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NavBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New Workout Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewExercise,\n      children: [/*#__PURE__*/_jsxDEV(ExerciseDropdownSearch, {\n        allExercises: allExercises,\n        dropSelect: dropSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add selected exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWorkoutContainer, \"7BC5ZA32rWtZ8UWoE5SZ043n9ZU=\");\n\n_c = NewWorkoutContainer;\nexport default NewWorkoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkoutContainer\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","ExerciseList","NewWorkoutContainer","allExercises","setAllExercises","dropSelect","setDropSelect","handleNewExercise","event","preventDefault","getExerciseTargetById","fetch","then","response","json","data","setSelectedExercise","updateDrop","target","value","getAllExercises","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN,GADiC,CAGjC;AACA;;AACAC,IAAAA,qBAAqB;AAGxB,GARD;;AAUA,QAAMA,qBAAqB,GAAG,MAAM;AAChC,QAAGL,UAAH,EAAe;AACXM,MAAAA,KAAK,CAAE,qCAAoCN,UAAW,EAAjD,CAAL,CACCO,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIC,mBAAmB,CAACD,IAAD,CAFjC;AAGH;AACJ,GAND;;AAQA,QAAME,UAAU,GAAET,KAAD,IAAW;AACxBF,IAAAA,aAAa,CAACE,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BT,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIX,eAAe,CAACW,IAAD,CAFjC;AAGH,GAJD;;AAMAhB,EAAAA,SAAS,CAACqB,eAAD,EAAkB,EAAlB,CAAT,CAjC8B,CAmC9B;;AACA,SACIjB,YAAY,CAACkB,MAAb,GAAsB,CAAtB,gBAEA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA;AAAM,MAAA,QAAQ,EAAEd,iBAAhB;AAAA,8BACI,QAAC,sBAAD;AAAwB,QAAA,YAAY,EAAIJ,YAAxC;AAAsD,QAAA,UAAU,EAAEE;AAAlE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBAFA,gBAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ;AAgBH,CApDD;;GAAMH,mB;;KAAAA,mB;AAqDN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\n\nconst NewWorkoutContainer = () => {\n\n    const[allExercises, setAllExercises] = useState([]);\n    const [dropSelect, setDropSelect] = useState(null);\n\n    const handleNewExercise = (event) => {\n        event.preventDefault();\n\n        //when submit clicked, get exercise according to id\n        //add exercise to list and display\n        getExerciseTargetById;\n\n\n    }\n\n    const getExerciseTargetById = () => {\n        if(dropSelect) {\n            fetch(`http://localhost:8080/api/v1/data/${dropSelect}`)\n            .then(response => response.json())\n            .then(data => setSelectedExercise(data));\n        }\n    }\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n    \n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    // const getExerciseFromSelect\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n        {/* updateDrop={updateDrop} */}\n        <form onSubmit={handleNewExercise}>\n            <ExerciseDropdownSearch allExercises = {allExercises} dropSelect={dropSelect} />\n            <input type=\"submit\" value=\"Add selected exercise\" />\n        </form>\n        {/* <ExerciseList allExercises={allExercises}/> */}\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;"]},"metadata":{},"sourceType":"module"}